[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "business-search-agent"
version = "1.0.0"
authors = [
    {name = "Yuan Shuo", email = "yuanshuo@example.com"},
]
description = "High-performance, enterprise-grade search agent optimized for Chinese content extraction"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
]
keywords = ["search", "web-scraping", "chinese-content", "business-intelligence", "async"]
dependencies = [
    "aiohttp>=3.12.0,<4.0.0",
    "beautifulsoup4>=4.12.0,<5.0.0",
    "fake-useragent>=2.2.0,<3.0.0",
    "cachetools>=6.2.0,<7.0.0",
    "tenacity>=9.1.0,<10.0.0",
    "typing-extensions>=4.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0,<9.0.0",
    "pytest-asyncio>=0.24.0,<1.0.0",
    "pytest-cov>=6.0.0,<7.0.0",
    "black>=24.0.0,<25.0.0",
    "flake8>=7.0.0,<8.0.0",
    "mypy>=1.8.0,<2.0.0",
]
docs = [
    "sphinx>=8.0.0,<9.0.0",
    "sphinx-rtd-theme>=3.0.0,<4.0.0",
]
monitoring = [
    "psutil>=6.0.0,<7.0.0",
]

[project.urls]
"Homepage" = "https://github.com/yuanshuo/business-search-agent"
"Bug Reports" = "https://github.com/yuanshuo/business-search-agent/issues"
"Source" = "https://github.com/yuanshuo/business-search-agent"
"Documentation" = "https://business-search-agent.readthedocs.io/"

[project.scripts]
business-search = "business_search_agent.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["business_search_agent*"]
exclude = ["tests*"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=business_search_agent --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/business_search_agent"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]